# Generated by Django 4.2.23 on 2025-08-04 09:09

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('items', '0003_item_cbm_item_country_of_origin_item_gross_weight_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customer', '0007_add_supplier_customer_type'),
        ('facility', '0002_facilitylocation'),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True, verbose_name='Invoice Number')),
                ('invoice_date', models.DateField(verbose_name='Invoice Date')),
                ('storage_period_from', models.DateField(verbose_name='Storage Period From')),
                ('storage_period_to', models.DateField(verbose_name='Storage Period To')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Tax Amount')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('finalized', 'Finalized'), ('cancelled', 'Cancelled'), ('paid', 'Paid')], default='draft', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('terms_conditions', models.TextField(blank=True, verbose_name='Terms & Conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('finalized_at', models.DateTimeField(blank=True, null=True, verbose_name='Finalized At')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_invoices_cancelled', to=settings.AUTH_USER_MODEL, verbose_name='Cancelled By')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_invoices', to='customer.customer', verbose_name='Customer')),
                ('finalized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_invoices_finalized', to=settings.AUTH_USER_MODEL, verbose_name='Finalized By')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_invoices_generated', to=settings.AUTH_USER_MODEL, verbose_name='Generated By')),
            ],
            options={
                'verbose_name': 'Storage Invoice',
                'verbose_name_plural': 'Storage Invoices',
                'ordering': ['-invoice_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorageCharges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_type', models.CharField(choices=[('per_pallet_day', 'Per Pallet/Day'), ('per_cbm_day', 'Per CBM/Day'), ('per_item_day', 'Per Item/Day'), ('per_weight_day', 'Per Weight/Day'), ('fixed_monthly', 'Fixed Monthly')], max_length=20, verbose_name='Charge Type')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Rate')),
                ('effective_date', models.DateField(verbose_name='Effective Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_charges_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_charges', to='customer.customer', verbose_name='Customer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_charges_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Storage Charge',
                'verbose_name_plural': 'Storage Charges',
                'ordering': ['-effective_date', 'customer__customer_name'],
            },
        ),
        migrations.CreateModel(
            name='StorageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pallet_id', models.CharField(blank=True, max_length=50, verbose_name='Pallet ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantity')),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Weight (kg)')),
                ('volume', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Volume (m³)')),
                ('activity_type', models.CharField(choices=[('in', 'Storage In'), ('out', 'Storage Out'), ('transfer', 'Transfer')], max_length=20, verbose_name='Activity Type')),
                ('activity_date', models.DateTimeField(verbose_name='Activity Date')),
                ('reference_number', models.CharField(blank=True, max_length=50, verbose_name='Reference Number')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_logs_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_logs', to='customer.customer', verbose_name='Customer')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_logs', to='items.item', verbose_name='Item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_logs', to='facility.facilitylocation', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Storage Log',
                'verbose_name_plural': 'Storage Logs',
                'ordering': ['-activity_date'],
                'indexes': [models.Index(fields=['customer', 'activity_date'], name='storage_inv_custome_ef67a6_idx'), models.Index(fields=['activity_type'], name='storage_inv_activit_cfa18b_idx'), models.Index(fields=['pallet_id'], name='storage_inv_pallet__52b191_idx')],
            },
        ),
        migrations.CreateModel(
            name='StorageInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pallet_id', models.CharField(blank=True, max_length=50, verbose_name='Pallet ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity')),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Weight (kg)')),
                ('volume', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Volume (m³)')),
                ('storage_days', models.IntegerField(verbose_name='Storage Days')),
                ('charge_type', models.CharField(choices=[('per_pallet_day', 'Per Pallet/Day'), ('per_cbm_day', 'Per CBM/Day'), ('per_item_day', 'Per Item/Day'), ('per_weight_day', 'Per Weight/Day'), ('fixed_monthly', 'Fixed Monthly')], max_length=20, verbose_name='Charge Type')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rate')),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Line Total')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='storage_invoice.storageinvoice', verbose_name='Invoice')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_invoice_items', to='items.item', verbose_name='Item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_invoice_items', to='facility.facilitylocation', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Storage Invoice Item',
                'verbose_name_plural': 'Storage Invoice Items',
                'ordering': ['invoice', 'item'],
                'indexes': [models.Index(fields=['invoice', 'item'], name='storage_inv_invoice_e34dca_idx'), models.Index(fields=['pallet_id'], name='storage_inv_pallet__4e56b8_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='storageinvoice',
            index=models.Index(fields=['customer', 'invoice_date'], name='storage_inv_custome_c486f4_idx'),
        ),
        migrations.AddIndex(
            model_name='storageinvoice',
            index=models.Index(fields=['status'], name='storage_inv_status_a49066_idx'),
        ),
        migrations.AddIndex(
            model_name='storageinvoice',
            index=models.Index(fields=['storage_period_from', 'storage_period_to'], name='storage_inv_storage_452d0c_idx'),
        ),
        migrations.AddIndex(
            model_name='storagecharges',
            index=models.Index(fields=['customer', 'charge_type'], name='storage_inv_custome_6f6db4_idx'),
        ),
        migrations.AddIndex(
            model_name='storagecharges',
            index=models.Index(fields=['effective_date'], name='storage_inv_effecti_c0efd8_idx'),
        ),
        migrations.AddIndex(
            model_name='storagecharges',
            index=models.Index(fields=['is_active'], name='storage_inv_is_acti_623add_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storagecharges',
            unique_together={('customer', 'charge_type', 'effective_date')},
        ),
    ]
