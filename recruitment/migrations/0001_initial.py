# Generated by Django 4.2.23 on 2025-08-05 08:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('screening', 'Screening'), ('shortlisted', 'Shortlisted'), ('interview', 'Interview'), ('offer', 'Offer'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notice_period', models.PositiveIntegerField(default=30, help_text='Days of notice period')),
                ('availability_date', models.DateField(blank=True, null=True)),
                ('screening_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('technical_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cultural_fit_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('internal_notes', models.TextField(blank=True)),
                ('candidate_notes', models.TextField(blank=True)),
                ('status_changed_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('current_position', models.CharField(blank=True, max_length=100)),
                ('current_company', models.CharField(blank=True, max_length=100)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('education_level', models.CharField(blank=True, max_length=100)),
                ('skills', models.TextField(blank=True)),
                ('resume', models.FileField(blank=True, upload_to='candidates/resumes/')),
                ('cover_letter', models.FileField(blank=True, upload_to='candidates/cover_letters/')),
                ('profile_picture', models.ImageField(blank=True, upload_to='candidates/photos/')),
                ('source', models.CharField(choices=[('internal', 'Internal Portal'), ('linkedin', 'LinkedIn'), ('indeed', 'Indeed'), ('glassdoor', 'Glassdoor'), ('company_website', 'Company Website'), ('referral', 'Employee Referral'), ('other', 'Other')], default='other', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidates_referred', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Candidate',
                'verbose_name_plural': 'Candidates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('negotiating', 'Negotiating'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('position_title', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='AED', max_length=3)),
                ('benefits', models.TextField(blank=True)),
                ('contract_type', models.CharField(choices=[('permanent', 'Permanent'), ('contract', 'Contract'), ('probation', 'Probation')], max_length=20)),
                ('probation_period', models.PositiveIntegerField(default=90, help_text='Days of probation period')),
                ('notice_period', models.PositiveIntegerField(default=30, help_text='Days of notice period')),
                ('offer_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('initial_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('negotiation_notes', models.TextField(blank=True)),
                ('offer_letter', models.FileField(blank=True, upload_to='offers/letters/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer', to='recruitment.application')),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
                'ordering': ['-offer_date'],
            },
        ),
        migrations.CreateModel(
            name='RecruitmentMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_applications', models.PositiveIntegerField(default=0)),
                ('applications_by_source', models.JSONField(default=dict)),
                ('total_interviews', models.PositiveIntegerField(default=0)),
                ('interviews_completed', models.PositiveIntegerField(default=0)),
                ('interviews_cancelled', models.PositiveIntegerField(default=0)),
                ('total_offers', models.PositiveIntegerField(default=0)),
                ('offers_accepted', models.PositiveIntegerField(default=0)),
                ('offers_rejected', models.PositiveIntegerField(default=0)),
                ('avg_time_to_hire', models.PositiveIntegerField(default=0, help_text='Average days to hire')),
                ('avg_time_to_fill', models.PositiveIntegerField(default=0, help_text='Average days to fill position')),
                ('total_cost_per_hire', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('advertising_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('agency_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('quality_of_hire_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('retention_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recruitment Metric',
                'verbose_name_plural': 'Recruitment Metrics',
                'ordering': ['-period_start'],
                'unique_together': {('period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='Onboarding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('joining_date', models.DateField()),
                ('orientation_date', models.DateField(blank=True, null=True)),
                ('documents_submitted', models.BooleanField(default=False)),
                ('background_check_completed', models.BooleanField(default=False)),
                ('medical_check_completed', models.BooleanField(default=False)),
                ('equipment_issued', models.BooleanField(default=False)),
                ('access_granted', models.BooleanField(default=False)),
                ('training_completed', models.BooleanField(default=False)),
                ('passport_copy', models.FileField(blank=True, upload_to='onboarding/documents/')),
                ('visa_copy', models.FileField(blank=True, upload_to='onboarding/documents/')),
                ('emirates_id', models.FileField(blank=True, upload_to='onboarding/documents/')),
                ('educational_certificates', models.FileField(blank=True, upload_to='onboarding/documents/')),
                ('experience_certificates', models.FileField(blank=True, upload_to='onboarding/documents/')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buddy_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onboarding_buddy', to=settings.AUTH_USER_MODEL)),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding', to='recruitment.offer')),
            ],
            options={
                'verbose_name': 'Onboarding',
                'verbose_name_plural': 'Onboarding',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobRequisition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('position_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship')], max_length=50)),
                ('salary_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='AED', max_length=3)),
                ('headcount', models.PositiveIntegerField(default=1)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_hr', 'Pending HR Approval'), ('pending_director', 'Pending Director Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('job_description', models.TextField()),
                ('required_skills', models.TextField()),
                ('preferred_skills', models.TextField(blank=True)),
                ('experience_required', models.PositiveIntegerField(help_text='Years of experience required')),
                ('education_required', models.CharField(blank=True, max_length=100)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('hr_approval_date', models.DateTimeField(blank=True, null=True)),
                ('director_approval_date', models.DateTimeField(blank=True, null=True)),
                ('target_start_date', models.DateField()),
                ('closing_date', models.DateField()),
                ('internal_notes', models.TextField(blank=True)),
                ('external_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by_director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_requisitions_director_approved', to=settings.AUTH_USER_MODEL)),
                ('approved_by_hr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_requisitions_hr_approved', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_requisitions_requested', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Requisition',
                'verbose_name_plural': 'Job Requisitions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('benefits', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('source', models.CharField(choices=[('internal', 'Internal Portal'), ('linkedin', 'LinkedIn'), ('indeed', 'Indeed'), ('glassdoor', 'Glassdoor'), ('company_website', 'Company Website'), ('referral', 'Employee Referral'), ('other', 'Other')], default='internal', max_length=20)),
                ('external_url', models.URLField(blank=True)),
                ('posting_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('applications_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requisition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_posting', to='recruitment.jobrequisition')),
            ],
            options={
                'verbose_name': 'Job Posting',
                'verbose_name_plural': 'Job Postings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interview_type', models.CharField(choices=[('phone', 'Phone Screen'), ('video', 'Video Call'), ('technical', 'Technical Interview'), ('hr', 'HR Interview'), ('managerial', 'Managerial Interview'), ('final', 'Final Interview'), ('assessment', 'Assessment')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('duration', models.PositiveIntegerField(default=60, help_text='Duration in minutes')),
                ('location', models.CharField(blank=True, max_length=200)),
                ('meeting_link', models.URLField(blank=True)),
                ('feedback_notes', models.TextField(blank=True)),
                ('technical_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('communication_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cultural_fit_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('recommendation', models.CharField(blank=True, choices=[('strong_hire', 'Strong Hire'), ('hire', 'Hire'), ('weak_hire', 'Weak Hire'), ('no_hire', 'No Hire'), ('strong_no_hire', 'Strong No Hire')], max_length=20)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='recruitment.application')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='recruitment.candidate')),
                ('interviewers', models.ManyToManyField(related_name='interviews_conducting', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interview',
                'verbose_name_plural': 'Interviews',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.AddField(
            model_name='application',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='recruitment.candidate'),
        ),
        migrations.AddField(
            model_name='application',
            name='job_posting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='recruitment.jobposting'),
        ),
        migrations.AddField(
            model_name='application',
            name='status_changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications_status_changed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('candidate', 'job_posting')},
        ),
    ]
