# Generated by Django 5.0.2 on 2025-08-17 13:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Task name for identification', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the task')),
                ('task_type', models.CharField(choices=[('backup', 'Database Backup'), ('report', 'Report Generation'), ('email', 'Email Notification'), ('sync', 'Data Sync'), ('custom', 'Custom Task')], help_text='Type of task to execute', max_length=20)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('specific_datetime', 'Specific Date/Time')], help_text='How often the task should run', max_length=20)),
                ('schedule_time', models.TimeField(help_text='Time of day to run the task')),
                ('schedule_date', models.DateField(blank=True, help_text='Specific date for one-time tasks', null=True)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month (1-31) for monthly tasks', null=True)),
                ('task_function', models.CharField(help_text="Python function path to execute (e.g., 'auto_task_scheduler.tasks.backup_database')", max_length=255)),
                ('task_parameters', models.JSONField(blank=True, default=dict, help_text='Parameters to pass to the task function')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('paused', 'Paused')], default='inactive', help_text='Current status of the task', max_length=20)),
                ('last_run_at', models.DateTimeField(blank=True, help_text='When the task was last executed', null=True)),
                ('next_run_at', models.DateTimeField(blank=True, help_text='When the task will run next', null=True)),
                ('max_execution_time', models.PositiveIntegerField(default=300, help_text='Maximum execution time in seconds')),
                ('retry_on_failure', models.BooleanField(default=True, help_text='Whether to retry the task if it fails')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts')),
                ('retry_delay', models.PositiveIntegerField(default=300, help_text='Delay between retries in seconds')),
                ('is_public', models.BooleanField(default=False, help_text='Whether other users can view this task')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who owns this task', on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Scheduled Task',
                'verbose_name_plural': 'Scheduled Tasks',
                'ordering': ['-created_at'],
                'permissions': [('can_manage_tasks', 'Can manage scheduled tasks'), ('can_run_tasks', 'Can manually run scheduled tasks')],
            },
        ),
        migrations.CreateModel(
            name='ScheduledTaskLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failure', 'Failure'), ('running', 'Running'), ('cancelled', 'Cancelled')], default='running', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, help_text='Execution time in seconds', null=True)),
                ('output_message', models.TextField(blank=True, help_text='Task output or error message')),
                ('error_traceback', models.TextField(blank=True, help_text='Full error traceback if task failed')),
                ('celery_task_id', models.CharField(blank=True, help_text='Celery task ID for tracking', max_length=255)),
                ('worker_name', models.CharField(blank=True, help_text='Name of the worker that executed the task', max_length=255)),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Number of retry attempts')),
                ('is_retry', models.BooleanField(default=False, help_text='Whether this execution was a retry')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_logs', to='auto_task_scheduler.scheduledtask')),
            ],
            options={
                'verbose_name': 'Task Execution Log',
                'verbose_name_plural': 'Task Execution Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('schedule_key', models.CharField(help_text='Unique key for Celery beat schedule', max_length=255, unique=True)),
                ('is_registered', models.BooleanField(default=False, help_text='Whether this schedule is registered with Celery beat')),
                ('last_sync', models.DateTimeField(auto_now=True, help_text='When the schedule was last synchronized with Celery')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this schedule was created')),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='celery_schedule', to='auto_task_scheduler.scheduledtask')),
            ],
            options={
                'verbose_name': 'Task Schedule',
                'verbose_name_plural': 'Task Schedules',
            },
        ),
    ]
