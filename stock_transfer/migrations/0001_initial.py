# Generated by Django 4.2.23 on 2025-08-04 06:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facility', '0002_facilitylocation'),
        ('items', '0003_item_cbm_item_country_of_origin_item_gross_weight_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_number', models.CharField(help_text='Unique transfer number (e.g., ST-001, TRF-002)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z0-9-]+$', 'Transfer number must contain only uppercase letters, numbers, and hyphens.')])),
                ('transfer_date', models.DateField(default=django.utils.timezone.now, help_text='Date of transfer')),
                ('transfer_type', models.CharField(choices=[('warehouse_to_warehouse', 'Warehouse to Warehouse'), ('department_to_department', 'Department to Department'), ('location_to_location', 'Location to Location'), ('bin_to_bin', 'Bin to Bin')], default='warehouse_to_warehouse', max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='External reference number', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or remarks')),
                ('special_instructions', models.TextField(blank=True, help_text='Special handling instructions')),
                ('total_items', models.PositiveIntegerField(default=0, help_text='Total number of different items')),
                ('total_quantity', models.DecimalField(decimal_places=2, default=0, help_text='Total quantity transferred', max_digits=15)),
                ('total_weight', models.DecimalField(decimal_places=2, default=0, help_text='Total weight in kg', max_digits=10)),
                ('total_volume', models.DecimalField(decimal_places=2, default=0, help_text='Total volume in cubic meters', max_digits=10)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, help_text='Total value of transferred items', max_digits=15)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_approved', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_created', to=settings.AUTH_USER_MODEL)),
                ('destination_facility', models.ForeignKey(help_text='Destination warehouse/facility', on_delete=django.db.models.deletion.CASCADE, related_name='destination_transfers', to='facility.facility')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_processed', to=settings.AUTH_USER_MODEL)),
                ('source_facility', models.ForeignKey(help_text='Source warehouse/facility', on_delete=django.db.models.deletion.CASCADE, related_name='source_transfers', to='facility.facility')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Stock Transfer',
                'verbose_name_plural': 'Stock Transfers',
                'ordering': ['-transfer_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_date', models.DateField(default=django.utils.timezone.now, help_text='Date of stock movement')),
                ('movement_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('adjustment', 'Adjustment'), ('damage', 'Damage/Loss')], help_text='Type of stock movement', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Reference number (GRN, DO, Transfer, etc.)', max_length=100)),
                ('location', models.CharField(blank=True, help_text='Specific location within facility', max_length=100)),
                ('quantity_in', models.DecimalField(decimal_places=2, default=0, help_text='Quantity received/in', max_digits=10)),
                ('quantity_out', models.DecimalField(decimal_places=2, default=0, help_text='Quantity issued/out', max_digits=10)),
                ('running_balance', models.DecimalField(decimal_places=2, help_text='Running balance after this movement', max_digits=10)),
                ('batch_number', models.CharField(blank=True, help_text='Batch number if applicable', max_length=100)),
                ('serial_number', models.CharField(blank=True, help_text='Serial number if applicable', max_length=100)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Unit cost at time of movement', max_digits=12, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, help_text='Total value of movement', max_digits=15, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements_created', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='facility.facility')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='items.item')),
                ('stock_transfer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ledger_entries', to='stock_transfer.stocktransfer')),
            ],
            options={
                'verbose_name': 'Stock Ledger Entry',
                'verbose_name_plural': 'Stock Ledger Entries',
                'ordering': ['-movement_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTransferItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity to Transfer')),
                ('available_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Available Quantity at Source')),
                ('unit_of_measure', models.CharField(default='PCS', max_length=20, verbose_name='Unit of Measure')),
                ('batch_number', models.CharField(blank=True, max_length=100, verbose_name='Batch Number')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='Serial Number')),
                ('source_location', models.CharField(blank=True, max_length=100, verbose_name='Source Location')),
                ('destination_location', models.CharField(blank=True, max_length=100, verbose_name='Destination Location')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Unit Cost')),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Total Value')),
                ('unit_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Unit Weight (kg)')),
                ('total_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Weight (kg)')),
                ('unit_volume', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Unit Volume (CBM)')),
                ('total_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Volume (CBM)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.item', verbose_name='Item')),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stock_transfer.stocktransfer', verbose_name='Stock Transfer')),
            ],
            options={
                'verbose_name': 'Stock Transfer Item',
                'verbose_name_plural': 'Stock Transfer Items',
                'unique_together': {('transfer', 'item', 'batch_number', 'serial_number')},
            },
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['transfer_number'], name='stock_trans_transfe_62db55_idx'),
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['transfer_date'], name='stock_trans_transfe_3d8517_idx'),
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['status'], name='stock_trans_status_2402b7_idx'),
        ),
        migrations.AddIndex(
            model_name='stocktransfer',
            index=models.Index(fields=['source_facility', 'destination_facility'], name='stock_trans_source__56bda0_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['item', 'facility', 'movement_date'], name='stock_trans_item_id_faa715_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['movement_type'], name='stock_trans_movemen_e34445_idx'),
        ),
        migrations.AddIndex(
            model_name='stockledger',
            index=models.Index(fields=['reference_number'], name='stock_trans_referen_7d7039_idx'),
        ),
    ]
