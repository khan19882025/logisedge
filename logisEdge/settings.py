"""
Django settings for logisEdge project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from django.core.exceptions import ImproperlyConfigured

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gbks$prf3dlx-_not8=@mtd6f%6^210_2u*jkbu@gt-&6gkgm@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'widget_tweaks',
    'accounts',
    'dashboard',
    'company',
    'user',
    'customer',
    'service',
    'port',
    'salesman',
    'items',
    'facility',
    'quotation',
    'job',
    'documentation',
    'crossstuffing',
    'grn',
    'putaways',
    'delivery_order',
    'dispatchnote',
    'rf_scanner',
    'invoice',
    'customer_payments',
    'supplier_payments',
    'credit_note',
    'debit_note',
    'supplier_bills',
    'dunning_letters',
    'multi_currency',
    'fiscal_year',
    'accounts_receivable_aging',
    'chart_of_accounts',
    'ledger',
    'general_journal',
    'trial_balance',
    'profit_loss_statement',
    'balance_sheet',
    'general_ledger_report',
    'cash_flow_statement',
    'payment_voucher',
    'receipt_voucher',
    'contra_entry',
    'adjustment_entry',
    'opening_balance',
    'all_transactions',
    'manual_journal_entry',
    'recurring_journal_entry',
    'bank_accounts',
    'bank_reconciliation',
    'cheque_register',
    'deposit_slip',
    'bank_transfer',
    'cash_transactions',
    'petty_cash',
    'asset_register',
    'dispose_asset',
    'stock_transfer',
    'location_transfer',
    'storage_invoice',
    'charges',
    'employees',
    'attendance',
    'leave_management',
    'payroll',
    'recruitment',
    'disciplinary_grievance',
    'hr_letters_documents',
    'exit_management',
    'freight_quotation',
    'freight_booking',
    'container_management',
    'shipment_tracking',
    'tax_settings',
    'tax_summary',
    'tax_filing',
    'tax_invoice',
    'depreciation_schedule',
    'asset_movement_log',
    'cost_center_management',
    'cost_center_transaction_tagging',
    'cost_center_reports',
    'budget_planning',
    'bill_of_lading',
    'payment_scheduling',
    'approval_workflow',
    'roles_permissions',
    'master_data_import',
    'bulk_export',
    'data_cleaning_tool',
    'manual_backup',
    'partner_ledger',
    'vendor_ledger',
    'payment_source',
    'source_payment_ledger',
    'backup_scheduler',
    'activity_logs',
    'log_history',
    'system_logs',
    'email_configuration',
    'sms_gateway',
    'bulk_email_sender',
    'notification_templates',
    'print_queue_management',
    'pdf_preview_tool',
    'auto_task_scheduler',
    'cron_job_viewer',
    'django_celery_beat',
    'lgp',
    'customs_BOE_report',
    'billing_payable_tracking',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'logisEdge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'logisEdge.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Fetching database credentials from environment variables for better security.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'adiraifreight'),
        'USER': os.getenv('DB_USER', 'adiraifreight_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'FnB2pRZQ4IefiWrdMaQwnlQ2LTUrvGHG'),
        'HOST': os.getenv('DB_HOST', 'dpg-d2pgrlp5pdvs73ehaalg-a.oregon-postgres.render.com'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}

# Optional: If you have specific environment variables for different environments
# Example: To specify internal or external DB based on environment settings
DB_ENV = os.getenv('DB_ENV', 'external')  # 'external' or 'internal'

if DB_ENV == 'external':
    DATABASES['default']['HOST'] = 'dpg-d2pgrlp5pdvs73ehaalg-a.oregon-postgres.render.com'
elif DB_ENV == 'internal':
    DATABASES['default']['HOST'] = 'dpg-d2pgrlp5pdvs73ehaalg-a'

# Ensure these environment variables are set in your deployment environment or .env file


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 25
}

# Login settings
LOGIN_REDIRECT_URL = '/accounts/dashboard/'
LOGIN_URL = '/login/'
LOGOUT_REDIRECT_URL = '/login/'

# Session settings - Make sessions expire when browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 3600  # 1 hour timeout for inactivity (in seconds)
SESSION_SAVE_EVERY_REQUEST = True  # Update session on every request to track activity

# Custom User Model
# AUTH_USER_MODEL = 'user.User'

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For development - prints emails to console
DEFAULT_FROM_EMAIL = 'noreply@logisedge.com'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025
EMAIL_USE_TLS = False
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''

# For production, use SMTP settings like:
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your-email@gmail.com'
# EMAIL_HOST_PASSWORD = 'your-app-password'

# Site URL for email links
SITE_URL = 'http://localhost:8000'  # Update for production

# Billing Notification Settings
BILLING_NOTIFICATION_FROM_EMAIL = DEFAULT_FROM_EMAIL
BILLING_REMINDER_FREQUENCY_DAYS = 3  # Send reminders every 3 days for overdue bills
BILLING_UPCOMING_REMINDER_DAYS = 3   # Send reminders 3 days before due date

# Celery Configuration
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = True

# Celery Beat Schedule
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# Celery Task Routes
CELERY_TASK_ROUTES = {
    'auto_task_scheduler.tasks.*': {'queue': 'scheduler'},
    'auto_task_scheduler.tasks.execute_backup_task': {'queue': 'backup'},
    'auto_task_scheduler.tasks.execute_report_task': {'queue': 'reports'},
    'auto_task_scheduler.tasks.execute_email_task': {'queue': 'email'},
    'auto_task_scheduler.tasks.execute_sync_task': {'queue': 'sync'},
    # Billing & Payable Tracking Task Routes
    'billing_payable_tracking.tasks.*': {'queue': 'billing'},
    'billing_payable_tracking.tasks.send_bill_reminder_notifications': {'queue': 'email'},
    'billing_payable_tracking.tasks.send_daily_summary_report': {'queue': 'email'},
    'billing_payable_tracking.tasks.mark_overdue_bills': {'queue': 'billing'},
    'billing_payable_tracking.tasks.cleanup_old_reminders': {'queue': 'billing'},
}

# Celery Worker Concurrency
CELERY_WORKER_CONCURRENCY = 4
CELERY_WORKER_MAX_TASKS_PER_CHILD = 1000
CELERY_WORKER_PREFETCH_MULTIPLIER = 1

# Redis Configuration
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
REDIS_PASSWORD = None  # Set if Redis requires authentication

# Task Execution Settings
TASK_EXECUTION_TIMEOUT = 3600  # 1 hour
TASK_MAX_RETRIES = 3
TASK_RETRY_DELAY = 300  # 5 minutes
