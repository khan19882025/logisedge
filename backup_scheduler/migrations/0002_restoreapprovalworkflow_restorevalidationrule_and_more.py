# Generated by Django 5.0.2 on 2025-08-10 18:29

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backup_scheduler', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RestoreApprovalWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('workflow_type', models.CharField(choices=[('single_approver', 'Single Approver'), ('multiple_approvers', 'Multiple Approvers (All Required)'), ('hierarchical', 'Hierarchical Approval'), ('committee', 'Committee Approval')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('auto_approve_low_priority', models.BooleanField(default=False)),
                ('auto_approve_own_requests', models.BooleanField(default=False)),
                ('approvers', models.JSONField(default=list)),
                ('min_approvals_required', models.PositiveIntegerField(default=1)),
                ('notify_approvers', models.BooleanField(default=True)),
                ('notify_requestor', models.BooleanField(default=True)),
                ('notify_admins', models.BooleanField(default=False)),
                ('approval_timeout_hours', models.PositiveIntegerField(default=24)),
                ('escalation_enabled', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Restore Approval Workflow',
                'verbose_name_plural': 'Restore Approval Workflows',
            },
        ),
        migrations.CreateModel(
            name='RestoreValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('validation_type', models.CharField(choices=[('data_integrity', 'Data Integrity Check'), ('referential_integrity', 'Referential Integrity Check'), ('business_logic', 'Business Logic Validation'), ('custom_validation', 'Custom Validation')], max_length=20)),
                ('description', models.TextField()),
                ('validation_query', models.TextField(blank=True)),
                ('validation_script', models.TextField(blank=True)),
                ('expected_result', models.TextField(blank=True)),
                ('run_before_restore', models.BooleanField(default=False)),
                ('run_after_restore', models.BooleanField(default=True)),
                ('is_critical', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Restore Validation Rule',
                'verbose_name_plural': 'Restore Validation Rules',
            },
        ),
        migrations.CreateModel(
            name='RestoreExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('rolled_back', 'Rolled Back')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('current_step', models.CharField(blank=True, max_length=100)),
                ('total_steps', models.PositiveIntegerField(default=1)),
                ('current_step_number', models.PositiveIntegerField(default=0)),
                ('restored_tables', models.JSONField(blank=True, default=list)),
                ('restored_records', models.PositiveIntegerField(blank=True, null=True)),
                ('data_integrity_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_step', models.CharField(blank=True, max_length=100)),
                ('rollback_executed', models.BooleanField(default=False)),
                ('rollback_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('executed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Restore Execution',
                'verbose_name_plural': 'Restore Executions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestoreRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('restore_type', models.CharField(choices=[('full_database', 'Full Database'), ('module_specific', 'Module Specific'), ('point_in_time', 'Point-in-Time Recovery'), ('selective_records', 'Selective Records'), ('staging_test', 'Staging/Test Environment')], max_length=20)),
                ('target_environment', models.CharField(default='production', max_length=50)),
                ('source_file_path', models.CharField(blank=True, max_length=500)),
                ('source_checksum', models.CharField(blank=True, max_length=64)),
                ('restore_modules', models.JSONField(blank=True, default=list)),
                ('restore_tables', models.JSONField(blank=True, default=list)),
                ('restore_records', models.JSONField(blank=True, default=dict)),
                ('target_timestamp', models.DateTimeField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='Estimated duration in minutes', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('critical', 'Critical')], default='normal', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('requires_approval', models.BooleanField(default=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('actual_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('restored_file_path', models.CharField(blank=True, max_length=500)),
                ('restored_file_size_mb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('restored_records_count', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('backup_before_restore', models.BooleanField(default=True)),
                ('dry_run_enabled', models.BooleanField(default=False)),
                ('rollback_plan', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restore_approvals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restore_requests', to=settings.AUTH_USER_MODEL)),
                ('source_backup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backup_scheduler.backupexecution')),
            ],
            options={
                'verbose_name': 'Restore Request',
                'verbose_name_plural': 'Restore Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestoreNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('request_created', 'Request Created'), ('approval_required', 'Approval Required'), ('approved', 'Request Approved'), ('rejected', 'Request Rejected'), ('execution_started', 'Execution Started'), ('execution_completed', 'Execution Completed'), ('execution_failed', 'Execution Failed'), ('validation_failed', 'Validation Failed')], max_length=20)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('webhook', 'Webhook'), ('dashboard', 'Dashboard'), ('slack', 'Slack'), ('teams', 'Microsoft Teams')], max_length=20)),
                ('recipients', models.JSONField(default=list)),
                ('user_groups', models.JSONField(default=list)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message_template', models.TextField(blank=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_status', models.CharField(default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('restore_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_scheduler.restorerequest')),
            ],
            options={
                'verbose_name': 'Restore Notification',
                'verbose_name_plural': 'Restore Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestoreLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('message', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('restore_execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backup_scheduler.restoreexecution')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('restore_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backup_scheduler.restorerequest')),
            ],
            options={
                'verbose_name': 'Restore Log',
                'verbose_name_plural': 'Restore Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='restoreexecution',
            name='restore_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_scheduler.restorerequest'),
        ),
    ]
