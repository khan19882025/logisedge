# Generated by Django 5.0.2 on 2025-08-10 16:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('backup_type', models.CharField(choices=[('full', 'Full System Backup'), ('database', 'Database Only'), ('files', 'Files Only'), ('config', 'Configuration Only')], default='full', max_length=20)),
                ('compression_level', models.CharField(choices=[('none', 'None'), ('fast', 'Fast'), ('balanced', 'Balanced'), ('maximum', 'Maximum')], default='balanced', max_length=20)),
                ('encryption_type', models.CharField(choices=[('none', 'None'), ('aes128', 'AES-128'), ('aes256', 'AES-256')], default='aes256', max_length=20)),
                ('retention_days', models.IntegerField(default=30)),
                ('include_media', models.BooleanField(default=True)),
                ('include_static', models.BooleanField(default=True)),
                ('include_database', models.BooleanField(default=True)),
                ('include_config', models.BooleanField(default=True)),
                ('exclude_patterns', models.TextField(blank=True, help_text='File patterns to exclude (one per line)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Backup Configuration',
                'verbose_name_plural': 'Backup Configurations',
            },
        ),
        migrations.CreateModel(
            name='BackupRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('keep_daily_for_days', models.IntegerField(default=7)),
                ('keep_weekly_for_weeks', models.IntegerField(default=4)),
                ('keep_monthly_for_months', models.IntegerField(default=12)),
                ('keep_yearly_for_years', models.IntegerField(default=5)),
                ('keep_forever', models.BooleanField(default=False)),
                ('minimum_retention_days', models.IntegerField(default=1)),
                ('auto_cleanup', models.BooleanField(default=True)),
                ('cleanup_schedule', models.CharField(blank=True, help_text='Cron expression for cleanup schedule', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Backup Retention Policy',
                'verbose_name_plural': 'Backup Retention Policies',
            },
        ),
        migrations.CreateModel(
            name='BackupStorageLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('storage_type', models.CharField(choices=[('local', 'Local Storage'), ('network', 'Network Storage'), ('cloud', 'Cloud Storage'), ('tape', 'Tape Storage'), ('offline', 'Offline/Air-gapped')], max_length=20)),
                ('path', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('total_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('available_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('encryption_required', models.BooleanField(default=True)),
                ('host', models.CharField(blank=True, max_length=255)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('credentials_encrypted', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Backup Storage Location',
                'verbose_name_plural': 'Backup Storage Locations',
            },
        ),
        migrations.CreateModel(
            name='BackupSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Backup filename', max_length=255)),
                ('reason', models.CharField(choices=[('general', 'General System Backup'), ('predepLOY', 'Pre-Deployment Backup'), ('postdeploy', 'Post-Deployment Backup'), ('maintenance', 'System Maintenance'), ('emergency', 'Emergency Backup'), ('scheduled', 'Scheduled Backup'), ('manual', 'Manual Backup')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('critical', 'Critical')], default='normal', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('current_step', models.CharField(blank=True, max_length=100)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('checksum_sha256', models.CharField(blank=True, max_length=64)),
                ('primary_storage_path', models.CharField(blank=True, max_length=500)),
                ('secondary_storage_path', models.CharField(blank=True, max_length=500)),
                ('integrity_verified', models.BooleanField(default=False)),
                ('verification_checksum', models.CharField(blank=True, max_length=64)),
                ('verification_timestamp', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notify_emails', models.TextField(blank=True, help_text='Comma-separated list of email addresses')),
                ('notification_sent', models.BooleanField(default=False)),
                ('configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manual_backup.backupconfiguration')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backups_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup Session',
                'verbose_name_plural': 'Backup Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BackupAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('backup_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='manual_backup.backupsession')),
            ],
            options={
                'verbose_name': 'Backup Audit Log',
                'verbose_name_plural': 'Backup Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BackupStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_type', models.CharField(choices=[('preparation', 'Preparation'), ('database_backup', 'Database Backup'), ('file_backup', 'File Backup'), ('checksum_generation', 'Checksum Generation'), ('encryption', 'Encryption'), ('storage', 'Storage'), ('verification', 'Verification'), ('cleanup', 'Cleanup')], max_length=30)),
                ('step_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('order', models.IntegerField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('details', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('backup_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='manual_backup.backupsession')),
            ],
            options={
                'verbose_name': 'Backup Step',
                'verbose_name_plural': 'Backup Steps',
                'ordering': ['backup_session', 'order'],
                'unique_together': {('backup_session', 'order')},
            },
        ),
    ]
