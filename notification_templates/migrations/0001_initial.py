# Generated by Django 4.2.23 on 2025-08-12 08:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('in_app', 'In-App Notification')], max_length=20)),
                ('subject', models.CharField(blank=True, help_text='Email subject or SMS title', max_length=255)),
                ('content', models.TextField(help_text='Template content with placeholders')),
                ('html_content', models.TextField(blank=True, help_text='HTML version for email templates')),
                ('language', models.CharField(default='en', help_text='Language code (en, ar, ur)', max_length=10)),
                ('is_default_language', models.BooleanField(default=False, help_text='Is this the default language version?')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('placeholders', models.JSONField(blank=True, default=list, help_text='Available placeholders')),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Template Category',
                'verbose_name_plural': 'Template Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TemplatePlaceholder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('placeholder_type', models.CharField(choices=[('customer', 'Customer Information'), ('order', 'Order Information'), ('payment', 'Payment Information'), ('system', 'System Information'), ('custom', 'Custom Field')], max_length=20)),
                ('example_value', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_required', models.BooleanField(default=False)),
                ('data_type', models.CharField(default='string', help_text='Data type (string, number, date, etc.)', max_length=50)),
                ('format_string', models.CharField(blank=True, help_text='Format string for dates/numbers', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Template Placeholder',
                'verbose_name_plural': 'Template Placeholders',
                'ordering': ['placeholder_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TemplateTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_data', models.JSONField(default=dict, help_text='Test data for placeholders')),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('tested_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='notification_templates.notificationtemplate')),
                ('tested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Test',
                'verbose_name_plural': 'Template Tests',
                'ordering': ['-tested_at'],
            },
        ),
        migrations.CreateModel(
            name='TemplateAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('activated', 'Activated'), ('deactivated', 'Deactivated'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('tested', 'Tested')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('old_values', models.JSONField(blank=True, default=dict)),
                ('new_values', models.JSONField(blank=True, default=dict)),
                ('change_reason', models.CharField(blank=True, max_length=500)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='notification_templates.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Audit Log',
                'verbose_name_plural': 'Template Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='notification_templates.templatecategory'),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_notification_templates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='parent_template',
            field=models.ForeignKey(blank=True, help_text='Parent template for translations', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='notification_templates.notificationtemplate'),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_notification_templates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TemplateVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version_number', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('change_reason', models.CharField(blank=True, max_length=500)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='notification_templates.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Template Version',
                'verbose_name_plural': 'Template Versions',
                'ordering': ['-version_number'],
                'unique_together': {('template', 'version_number')},
            },
        ),
        migrations.CreateModel(
            name='TemplatePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission_type', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('edit', 'Edit'), ('delete', 'Delete'), ('approve', 'Approve'), ('test', 'Test'), ('publish', 'Publish')], max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notification_templates.templatecategory')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Permission',
                'verbose_name_plural': 'Template Permissions',
                'unique_together': {('user', 'permission_type', 'category')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='notificationtemplate',
            unique_together={('name', 'language')},
        ),
    ]
