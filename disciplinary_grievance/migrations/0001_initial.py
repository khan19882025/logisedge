# Generated by Django 4.2.23 on 2025-08-05 11:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DisciplinaryAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('justification', models.TextField()),
                ('effective_date', models.DateField()),
                ('duration_days', models.IntegerField(blank=True, help_text='For suspensions, terminations, etc.', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('implemented', 'Implemented')], default='pending', max_length=20)),
                ('implemented_at', models.DateTimeField(blank=True, null=True)),
                ('employee_acknowledged', models.BooleanField(default=False)),
                ('acknowledgment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplinary Action',
                'verbose_name_plural': 'Disciplinary Actions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryActionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('severity_level', models.IntegerField(help_text='1=Lowest, 5=Highest severity', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplinary Action Type',
                'verbose_name_plural': 'Disciplinary Action Types',
                'ordering': ['severity_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Grievance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('under_review', 'Under Review'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='new', max_length=20)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('incident_date', models.DateField()),
                ('incident_location', models.CharField(blank=True, max_length=200)),
                ('witnesses', models.TextField(blank=True, help_text='Names and contact details of witnesses')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_grievances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grievance',
                'verbose_name_plural': 'Grievances',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GrievanceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Grievance Category',
                'verbose_name_plural': 'Grievance Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GrievanceNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_internal', models.BooleanField(default=False, help_text='Internal notes not visible to employee')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('grievance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='disciplinary_grievance.grievance')),
            ],
            options={
                'verbose_name': 'Grievance Note',
                'verbose_name_plural': 'Grievance Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GrievanceAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='grievance_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('grievance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='disciplinary_grievance.grievance')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grievance Attachment',
                'verbose_name_plural': 'Grievance Attachments',
            },
        ),
        migrations.AddField(
            model_name='grievance',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disciplinary_grievance.grievancecategory'),
        ),
        migrations.AddField(
            model_name='grievance',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_grievances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grievance',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grievances', to='employees.employee'),
        ),
        migrations.AddField(
            model_name='grievance',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_grievances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DisciplinaryCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('major', 'Major'), ('critical', 'Critical')], default='moderate', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('hearing_scheduled', 'Hearing Scheduled'), ('hearing_completed', 'Hearing Completed'), ('decision_pending', 'Decision Pending'), ('action_taken', 'Action Taken'), ('closed', 'Closed'), ('appealed', 'Appealed')], default='open', max_length=20)),
                ('incident_date', models.DateField()),
                ('incident_time', models.TimeField(blank=True, null=True)),
                ('incident_location', models.CharField(blank=True, max_length=200)),
                ('policy_violation', models.CharField(blank=True, max_length=200)),
                ('witnesses', models.TextField(blank=True)),
                ('evidence_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hearing_date', models.DateTimeField(blank=True, null=True)),
                ('decision_date', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('is_confidential', models.BooleanField(default=True)),
                ('assigned_investigator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investigating_cases', to=settings.AUTH_USER_MODEL)),
                ('committee_members', models.ManyToManyField(blank=True, related_name='committee_cases', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disciplinary_cases', to='employees.employee')),
                ('previous_cases', models.ManyToManyField(blank=True, related_name='subsequent_cases', to='disciplinary_grievance.disciplinarycase')),
                ('related_grievance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disciplinary_cases', to='disciplinary_grievance.grievance')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_cases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Disciplinary Case',
                'verbose_name_plural': 'Disciplinary Cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryActionDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('warning_letter', 'Warning Letter'), ('suspension_notice', 'Suspension Notice'), ('termination_letter', 'Termination Letter'), ('decision_letter', 'Decision Letter'), ('other', 'Other')], max_length=50)),
                ('file', models.FileField(upload_to='disciplinary_documents/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disciplinary_grievance.disciplinaryaction')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Disciplinary Action Document',
                'verbose_name_plural': 'Disciplinary Action Documents',
            },
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='action_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disciplinary_grievance.disciplinaryactiontype'),
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='approved_by_hr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_approved_actions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='approved_by_legal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legal_approved_actions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='approved_by_management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='management_approved_actions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='disciplinary_grievance.disciplinarycase'),
        ),
        migrations.AddField(
            model_name='disciplinaryaction',
            name='implemented_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='implemented_actions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CaseAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=50)),
                ('object_id', models.IntegerField()),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('status_changed', 'Status Changed'), ('assigned', 'Assigned'), ('action_taken', 'Action Taken'), ('document_uploaded', 'Document Uploaded'), ('note_added', 'Note Added'), ('appeal_filed', 'Appeal Filed'), ('closed', 'Closed')], max_length=20)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case Audit Log',
                'verbose_name_plural': 'Case Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grounds_for_appeal', models.TextField()),
                ('supporting_evidence', models.TextField(blank=True)),
                ('requested_outcome', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True)),
                ('outcome_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appeals', to='disciplinary_grievance.disciplinaryaction')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appeals', to='employees.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_appeals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Appeal',
                'verbose_name_plural': 'Appeals',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='EscalationMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')])),
                ('department', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalation_levels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Escalation Matrix',
                'verbose_name_plural': 'Escalation Matrix',
                'ordering': ['level', 'department', 'role'],
                'unique_together': {('level', 'department', 'role')},
            },
        ),
    ]
