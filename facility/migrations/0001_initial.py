# Generated by Django 4.2.23 on 2025-06-20 13:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_code', models.CharField(help_text='Unique facility code (e.g., FAC-001, WH-002)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z0-9-]+$', 'Facility code must contain only uppercase letters, numbers, and hyphens.')])),
                ('facility_name', models.CharField(help_text='Name of the facility', max_length=200)),
                ('facility_type', models.CharField(choices=[('warehouse', 'Warehouse'), ('office', 'Office'), ('factory', 'Factory'), ('store', 'Store'), ('distribution_center', 'Distribution Center'), ('cold_storage', 'Cold Storage'), ('parking', 'Parking'), ('maintenance', 'Maintenance'), ('security', 'Security'), ('other', 'Other')], default='warehouse', max_length=30)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('closed', 'Closed')], default='active', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the facility')),
                ('short_description', models.CharField(blank=True, help_text='Brief description for display', max_length=500)),
                ('address', models.TextField(help_text='Complete address of the facility')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude', max_digits=9, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, help_text='Total area in square meters', max_digits=10, null=True)),
                ('usable_area', models.DecimalField(blank=True, decimal_places=2, help_text='Usable area in square meters', max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Ceiling height in meters', max_digits=6, null=True)),
                ('capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Storage capacity in cubic meters', max_digits=12, null=True)),
                ('max_weight_capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum weight capacity in tons', max_digits=10, null=True)),
                ('operating_hours', models.CharField(blank=True, help_text='e.g., Mon-Fri 8AM-6PM, Sat 9AM-3PM', max_length=200)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('is_24_7', models.BooleanField(default=False, help_text='Facility operates 24/7')),
                ('has_security', models.BooleanField(default=False)),
                ('has_cctv', models.BooleanField(default=False)),
                ('has_fire_suppression', models.BooleanField(default=False)),
                ('has_climate_control', models.BooleanField(default=False)),
                ('loading_docks', models.PositiveIntegerField(default=0)),
                ('forklifts', models.PositiveIntegerField(default=0)),
                ('pallet_racks', models.PositiveIntegerField(default=0)),
                ('refrigeration_units', models.PositiveIntegerField(default=0)),
                ('power_generators', models.PositiveIntegerField(default=0)),
                ('monthly_rent', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly rent amount', max_digits=12, null=True)),
                ('utilities_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly utilities cost', max_digits=10, null=True)),
                ('maintenance_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly maintenance cost', max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('owner', models.CharField(blank=True, help_text='Facility owner or landlord', max_length=200)),
                ('lease_start_date', models.DateField(blank=True, null=True)),
                ('lease_end_date', models.DateField(blank=True, null=True)),
                ('is_owned', models.BooleanField(default=False, help_text='Facility is owned by the company')),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes not visible to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facilities',
                'db_table': 'facility',
                'ordering': ['facility_name'],
            },
        ),
    ]
