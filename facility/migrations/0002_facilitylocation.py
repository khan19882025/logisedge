# Generated by Django 4.2.23 on 2025-06-20 14:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facility', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_code', models.CharField(help_text='Unique location code within the facility (e.g., RACK-A1, AISLE-01)', max_length=20, validators=[django.core.validators.RegexValidator('^[A-Z0-9-]+$', 'Location code must contain only uppercase letters, numbers, and hyphens.')])),
                ('location_name', models.CharField(help_text='Name of the location', max_length=200)),
                ('location_type', models.CharField(choices=[('rack', 'Rack'), ('aisle', 'Aisle'), ('general_area', 'General Area'), ('loading_dock', 'Loading Dock'), ('cold_storage', 'Cold Storage'), ('hazardous_area', 'Hazardous Area'), ('office_area', 'Office Area'), ('parking_area', 'Parking Area'), ('maintenance_area', 'Maintenance Area'), ('security_area', 'Security Area'), ('other', 'Other')], default='rack', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved'), ('full', 'Full')], default='active', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the location')),
                ('area', models.DecimalField(blank=True, decimal_places=2, help_text='Area in square meters', max_digits=8, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in meters', max_digits=6, null=True)),
                ('capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Storage capacity in cubic meters', max_digits=10, null=True)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum weight capacity in tons', max_digits=8, null=True)),
                ('floor_level', models.CharField(blank=True, help_text='Floor level (e.g., G, 1, 2, B1)', max_length=10)),
                ('section', models.CharField(blank=True, help_text='Section within the facility', max_length=50)),
                ('zone', models.CharField(blank=True, help_text='Zone designation', max_length=50)),
                ('rack_number', models.CharField(blank=True, help_text='Rack number if applicable', max_length=20)),
                ('aisle_number', models.CharField(blank=True, help_text='Aisle number if applicable', max_length=20)),
                ('bay_number', models.CharField(blank=True, help_text='Bay number if applicable', max_length=20)),
                ('level_number', models.CharField(blank=True, help_text='Level number if applicable', max_length=20)),
                ('x_coordinate', models.DecimalField(blank=True, decimal_places=2, help_text='X coordinate for mapping', max_digits=8, null=True)),
                ('y_coordinate', models.DecimalField(blank=True, decimal_places=2, help_text='Y coordinate for mapping', max_digits=8, null=True)),
                ('access_restrictions', models.TextField(blank=True, help_text='Any access restrictions or special requirements')),
                ('temperature_range', models.CharField(blank=True, help_text='Temperature range if applicable', max_length=50)),
                ('humidity_range', models.CharField(blank=True, help_text='Humidity range if applicable', max_length=50)),
                ('has_lighting', models.BooleanField(default=True)),
                ('has_climate_control', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('has_fire_suppression', models.BooleanField(default=False)),
                ('is_accessible_by_forklift', models.BooleanField(default=True)),
                ('is_accessible_by_pallet_jack', models.BooleanField(default=True)),
                ('current_utilization', models.DecimalField(decimal_places=2, default=0, help_text='Current utilization percentage', max_digits=5)),
                ('reserved_capacity', models.DecimalField(decimal_places=2, default=0, help_text='Reserved capacity percentage', max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes not visible to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facility_locations_created', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='facility.facility')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facility_locations_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Facility Location',
                'verbose_name_plural': 'Facility Locations',
                'db_table': 'facility_location',
                'ordering': ['facility', 'location_type', 'location_code'],
                'unique_together': {('facility', 'location_code')},
            },
        ),
    ]
