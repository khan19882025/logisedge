# Generated by Django 4.2.23 on 2025-08-11 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DebugSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_name', models.CharField(max_length=255)),
                ('session_type', models.CharField(choices=[('DEVELOPMENT', 'Development'), ('TESTING', 'Testing'), ('DEBUGGING', 'Debugging'), ('MONITORING', 'Monitoring'), ('AUDIT', 'Audit')], default='DEBUGGING', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('environment', models.CharField(default='development', max_length=50)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('context_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Debug Session',
                'verbose_name_plural': 'Debug Sessions',
                'db_table': 'debug_sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ErrorPattern',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pattern_type', models.CharField(choices=[('EXCEPTION', 'Exception Pattern'), ('PERFORMANCE', 'Performance Pattern'), ('SECURITY', 'Security Pattern'), ('BUSINESS_LOGIC', 'Business Logic Pattern')], default='EXCEPTION', max_length=20)),
                ('pattern_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('error_signature', models.TextField()),
                ('error_type', models.CharField(max_length=255)),
                ('module', models.CharField(blank=True, max_length=100)),
                ('function', models.CharField(blank=True, max_length=100)),
                ('occurrence_count', models.PositiveIntegerField(default=1)),
                ('first_occurrence', models.DateTimeField(auto_now_add=True)),
                ('last_occurrence', models.DateTimeField(auto_now=True)),
                ('total_affected_users', models.PositiveIntegerField(default=0)),
                ('avg_severity', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical'), ('FATAL', 'Fatal')], default='ERROR', max_length=20)),
                ('max_severity', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical'), ('FATAL', 'Fatal')], default='ERROR', max_length=20)),
                ('avg_execution_time', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Error Pattern',
                'verbose_name_plural': 'Error Patterns',
                'db_table': 'error_patterns',
                'ordering': ['-occurrence_count', '-last_occurrence'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('log_type', models.CharField(choices=[('EXCEPTION', 'Exception'), ('WARNING', 'Warning'), ('DEBUG', 'Debug'), ('INFO', 'Information'), ('PERFORMANCE', 'Performance'), ('SECURITY', 'Security'), ('AUDIT', 'Audit'), ('SYSTEM', 'System')], default='EXCEPTION', max_length=20)),
                ('severity', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical'), ('FATAL', 'Fatal')], default='ERROR', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('RESOLVED', 'Resolved'), ('IGNORED', 'Ignored'), ('ESCALATED', 'Escalated'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=20)),
                ('error_message', models.TextField()),
                ('error_type', models.CharField(blank=True, max_length=255)),
                ('stack_trace', models.TextField(blank=True)),
                ('exception_details', models.JSONField(blank=True, default=dict)),
                ('module', models.CharField(blank=True, max_length=100)),
                ('function', models.CharField(blank=True, max_length=100)),
                ('line_number', models.IntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_url', models.URLField(blank=True, max_length=1000)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('execution_time', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('memory_usage', models.CharField(blank=True, max_length=50)),
                ('cpu_usage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('object_name', models.CharField(blank=True, max_length=255)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('environment', models.CharField(default='production', max_length=50)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('escalation_level', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log',
                'verbose_name_plural': 'System Logs',
                'db_table': 'system_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LogRetentionPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('retention_type', models.CharField(choices=[('TIME_BASED', 'Time-based'), ('SIZE_BASED', 'Size-based'), ('SEVERITY_BASED', 'Severity-based'), ('PATTERN_BASED', 'Pattern-based')], default='TIME_BASED', max_length=20)),
                ('retention_value', models.IntegerField(help_text='Days for time-based, MB for size-based, etc.')),
                ('action_type', models.CharField(choices=[('ARCHIVE', 'Archive'), ('DELETE', 'Delete'), ('COMPRESS', 'Compress'), ('MOVE', 'Move to cold storage')], default='ARCHIVE', max_length=20)),
                ('severity_levels', models.JSONField(blank=True, default=list)),
                ('log_types', models.JSONField(blank=True, default=list)),
                ('modules', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('next_execution', models.DateTimeField(blank=True, null=True)),
                ('total_processed', models.PositiveIntegerField(default=0)),
                ('last_processed_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log Retention Policy',
                'verbose_name_plural': 'System Log Retention Policies',
                'db_table': 'system_log_retention_policies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LogExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('export_format', models.CharField(choices=[('CSV', 'CSV'), ('JSON', 'JSON'), ('XML', 'XML'), ('PDF', 'PDF'), ('EXCEL', 'Excel')], default='CSV', max_length=20)),
                ('filter_criteria', models.JSONField(default=dict)),
                ('include_metadata', models.BooleanField(default=True)),
                ('max_records', models.PositiveIntegerField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('record_count', models.PositiveIntegerField(default=0)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('download_url', models.URLField(blank=True, max_length=1000)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log Export',
                'verbose_name_plural': 'System Log Exports',
                'db_table': 'system_log_exports',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ErrorPatternLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_at', models.DateTimeField(auto_now_add=True)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_logs.systemlog')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_logs.errorpattern')),
            ],
            options={
                'db_table': 'error_pattern_logs',
            },
        ),
        migrations.AddField(
            model_name='errorpattern',
            name='related_logs',
            field=models.ManyToManyField(through='system_logs.ErrorPatternLog', to='system_logs.systemlog'),
        ),
        migrations.AddField(
            model_name='errorpattern',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DebugSessionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('log_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_logs.systemlog')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system_logs.debugsession')),
            ],
            options={
                'db_table': 'debug_session_logs',
            },
        ),
        migrations.AddField(
            model_name='debugsession',
            name='logs',
            field=models.ManyToManyField(through='system_logs.DebugSessionLog', to='system_logs.systemlog'),
        ),
        migrations.AddField(
            model_name='debugsession',
            name='started_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['timestamp', 'severity'], name='system_logs_timesta_d61d34_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['log_type', 'status'], name='system_logs_log_typ_66893b_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['module', 'function'], name='system_logs_module_0c0d07_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['user', 'timestamp'], name='system_logs_user_id_942324_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='errorpatternlog',
            unique_together={('pattern', 'log_entry')},
        ),
        migrations.AlterUniqueTogether(
            name='debugsessionlog',
            unique_together={('session', 'log_entry')},
        ),
    ]
