# Generated by Django 4.2.23 on 2025-07-08 13:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('multi_currency', '0001_initial'),
        ('manual_journal_entry', '0001_initial'),
        ('fiscal_year', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company', '0003_remove_company_company_type'),
        ('chart_of_accounts', '0003_alter_chartofaccount_account_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecurringEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(help_text='Name for this recurring entry template', max_length=200)),
                ('journal_type', models.CharField(choices=[('GENERAL', 'General'), ('ADJUSTMENT', 'Adjustment'), ('OPENING', 'Opening')], default='GENERAL', max_length=20)),
                ('narration', models.TextField(help_text='Description of the recurring entry')),
                ('start_date', models.DateField(help_text='Date when recurring entries should start')),
                ('end_date', models.DateField(blank=True, help_text='Optional end date for recurring entries', null=True)),
                ('number_of_occurrences', models.PositiveIntegerField(blank=True, help_text='Optional number of occurrences', null=True)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually')], default='MONTHLY', max_length=20)),
                ('posting_day', models.CharField(choices=[('1ST', '1st of Month'), ('15TH', '15th of Month'), ('LAST', 'Last Day of Month'), ('CUSTOM', 'Custom Day')], default='1ST', max_length=10)),
                ('custom_day', models.PositiveIntegerField(blank=True, help_text='Custom day of month (1-31)', null=True)),
                ('total_debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('auto_post', models.BooleanField(default=False, help_text='Automatically post entries when due')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_entries', to='company.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_recurring_entries', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='multi_currency.currency')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_entries', to='fiscal_year.fiscalyear')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_recurring_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recurring Entry',
                'verbose_name_plural': 'Recurring Entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecurringEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('debit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_entry_lines', to='chart_of_accounts.chartofaccount')),
                ('recurring_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='recurring_journal_entry.recurringentry')),
            ],
            options={
                'verbose_name': 'Recurring Entry Line',
                'verbose_name_plural': 'Recurring Entry Lines',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posting_date', models.DateField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_source', to='manual_journal_entry.journalentry')),
                ('recurring_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_entries', to='recurring_journal_entry.recurringentry')),
            ],
            options={
                'verbose_name': 'Generated Entry',
                'verbose_name_plural': 'Generated Entries',
                'ordering': ['-posting_date'],
                'unique_together': {('recurring_entry', 'posting_date')},
            },
        ),
    ]
