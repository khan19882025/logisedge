# Generated by Django 4.2.23 on 2025-08-09 12:38

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cost_center_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransactionTagging',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(help_text='Unique transaction identifier', max_length=100, unique=True)),
                ('reference_number', models.CharField(help_text='Reference number (invoice, PO, etc.)', max_length=100)),
                ('transaction_type', models.CharField(choices=[('journal_entry', 'Journal Entry'), ('purchase_invoice', 'Purchase Invoice'), ('sales_invoice', 'Sales Invoice'), ('expense_claim', 'Expense Claim'), ('payment', 'Payment'), ('receipt', 'Receipt'), ('adjustment', 'Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='AED', max_length=3)),
                ('transaction_date', models.DateField()),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('posted', 'Posted'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_transactions', to='cost_center_management.costcenter')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_transaction_taggings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_transaction_taggings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction Tagging',
                'verbose_name_plural': 'Transaction Taggings',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionTaggingRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rule_name', models.CharField(max_length=200)),
                ('rule_type', models.CharField(choices=[('mandatory', 'Mandatory'), ('default', 'Default'), ('conditional', 'Conditional')], max_length=20)),
                ('transaction_type', models.CharField(choices=[('journal_entry', 'Journal Entry'), ('purchase_invoice', 'Purchase Invoice'), ('sales_invoice', 'Sales Invoice'), ('expense_claim', 'Expense Claim'), ('payment', 'Payment'), ('receipt', 'Receipt'), ('adjustment', 'Adjustment')], max_length=20)),
                ('account_type', models.CharField(blank=True, help_text='Account type for conditional rules', max_length=50)),
                ('priority', models.IntegerField(default=1, help_text='Rule priority (lower number = higher priority)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagging_rules', to='cost_center_management.costcenter')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tagging_rules', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tagging_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction Tagging Rule',
                'verbose_name_plural': 'Transaction Tagging Rules',
                'ordering': ['priority', 'rule_name'],
            },
        ),
        migrations.CreateModel(
            name='TransactionTaggingReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('cost_center_pl', 'Cost Center P&L'), ('expense_summary', 'Expense Summary'), ('budget_variance', 'Budget Variance'), ('transaction_list', 'Transaction List')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField(default=dict)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('cost_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tagging_reports', to='cost_center_management.costcenter')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_tagging_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction Tagging Report',
                'verbose_name_plural': 'Transaction Tagging Reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionTaggingAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('post', 'Post'), ('cancel', 'Cancel')], max_length=20)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('transaction_tagging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='cost_center_transaction_tagging.transactiontagging')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transaction_tagging_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction Tagging Audit Log',
                'verbose_name_plural': 'Transaction Tagging Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DefaultCostCenterMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mapping_type', models.CharField(choices=[('supplier', 'Supplier'), ('customer', 'Customer'), ('department', 'Department'), ('project', 'Project')], max_length=20)),
                ('entity_id', models.CharField(help_text='ID of the supplier, customer, department, or project', max_length=100)),
                ('entity_name', models.CharField(help_text='Name of the entity', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_mappings', to='cost_center_management.costcenter')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_default_mappings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_default_mappings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Default Cost Center Mapping',
                'verbose_name_plural': 'Default Cost Center Mappings',
                'ordering': ['mapping_type', 'entity_name'],
            },
        ),
        migrations.AddIndex(
            model_name='transactiontagging',
            index=models.Index(fields=['transaction_type', 'transaction_date'], name='cost_center_transac_cc0f40_idx'),
        ),
        migrations.AddIndex(
            model_name='transactiontagging',
            index=models.Index(fields=['cost_center', 'transaction_date'], name='cost_center_cost_ce_163442_idx'),
        ),
        migrations.AddIndex(
            model_name='transactiontagging',
            index=models.Index(fields=['status', 'transaction_date'], name='cost_center_status_7dc33e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='defaultcostcentermapping',
            unique_together={('mapping_type', 'entity_id')},
        ),
    ]
