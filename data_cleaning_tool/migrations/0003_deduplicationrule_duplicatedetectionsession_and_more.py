# Generated by Django 5.0.2 on 2025-08-10 14:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_cleaning_tool', '0002_datacleaningsession_archive_old_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeduplicationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('exact_match', 'Exact Match'), ('fuzzy_match', 'Fuzzy Match'), ('phonetic_match', 'Phonetic Match'), ('custom_rule', 'Custom Rule')], max_length=20)),
                ('entity_type', models.CharField(help_text='Type of entity this rule applies to', max_length=50)),
                ('rule_config', models.JSONField(default=dict, help_text='Configuration parameters for the rule')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0, help_text='Priority order for rule execution')),
                ('similarity_threshold', models.DecimalField(decimal_places=2, default=0.8, max_digits=5)),
                ('confidence_threshold', models.DecimalField(decimal_places=2, default=0.7, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DuplicateDetectionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('config', models.JSONField(default=dict, help_text='Deduplication configuration parameters')),
                ('total_records_processed', models.IntegerField(default=0)),
                ('duplicates_found', models.IntegerField(default=0)),
                ('records_merged', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DuplicateGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(help_text='Type of entity (customer, vendor, item, etc.)', max_length=50)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='Confidence score for duplicate detection', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_merged', models.BooleanField(default=False)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('merged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_cleaning_tool.duplicatedetectionsession')),
            ],
            options={
                'ordering': ['-confidence_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DuplicateRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(help_text='ID of the duplicate record', max_length=100)),
                ('record_data', models.JSONField(help_text='Snapshot of record data at detection time')),
                ('is_master', models.BooleanField(default=False, help_text='Whether this is the master record after merge')),
                ('merge_priority', models.IntegerField(default=0, help_text='Priority for selection as master record')),
                ('completeness_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('recency_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overall_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('duplicate_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_cleaning_tool.duplicategroup')),
            ],
            options={
                'ordering': ['-overall_score'],
            },
        ),
        migrations.CreateModel(
            name='MergeOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('rolled_back', 'Rolled Back')], default='pending', max_length=20)),
                ('merge_config', models.JSONField(default=dict, help_text='Configuration used for the merge')),
                ('merge_result', models.JSONField(default=dict, help_text='Result of the merge operation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('rollback_reason', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('duplicate_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_cleaning_tool.duplicategroup')),
                ('master_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_merges', to='data_cleaning_tool.duplicaterecord')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MergeAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=20)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('context_data', models.JSONField(default=dict, help_text='Additional context for the log entry')),
                ('merge_operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_cleaning_tool.mergeoperation')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledDeduplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('schedule_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], max_length=20)),
                ('cron_expression', models.CharField(blank=True, help_text='Cron expression for custom schedules', max_length=100)),
                ('config', models.JSONField(default=dict, help_text='Deduplication configuration for this schedule')),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
